{
  "componentName": "Page",
  "id": "node_dockcviv8fo1",
  "props": {
    "style": {
      "width": "100%",
      "minHeight": "500px",
      "padding": "10px",
      "backgroundColor": "#ddd"
    }
  },
  "docId": "doclhk9ucvr",
  "fileName": "/",
  "dataSource": {
    "list": [
      {
        "type": "fetch",
        "isInit": false,
        "options": {
          "params": {
            "page": {
              "type": "JSExpression",
              "value": "this.page"
            }
          },
          "method": "POST",
          "isCors": true,
          "timeout": 5000,
          "headers": {
            "Atp-Request-Source": "OSS",
            "Content-Type": "application/json;charset=UTF-8"
          },
          "uri": "/oss/identity/role/list"
        },
        "id": "list"
      },
      {
        "type": "fetch",
        "isInit": false,
        "options": {
          "params": {},
          "method": "POST",
          "isCors": true,
          "timeout": 5000,
          "headers": {
            "Atp-Request-Source": "OSS",
            "Content-Type": "application/json;charset=UTF-8"
          },
          "uri": "/oss/identity/role/delete"
        },
        "id": "deleteRole"
      },
      {
        "type": "fetch",
        "isInit": false,
        "options": {
          "params": {},
          "method": "POST",
          "isCors": true,
          "timeout": 5000,
          "headers": {
            "Atp-Request-Source": "OSS",
            "Content-Type": "application/json;charset=UTF-8;"
          },
          "uri": "/oss/identity/role/add"
        },
        "id": "addRole"
      }
    ]
  },
  "css": "body {\n  font-size: 12px;\n}\n\n.button {\n  width: 100px;\n  color: #ff00ff\n}",
  "lifeCycles": {
    "initModule": {
      "type": "JSExpression",
      "value": "(() => {const $id = \"node_dockcviv8fo1\"; return ($cached, $scope = window) => {\n  if ($id in $cached) return $cached[$id];\n  const exports = $cached[$id] = {};\n  const {defineComponent,toRaw} = $scope[\"Vue\"];\n  const onValidateRoleName=(rule, value)=>{\n    if (!value) {\n      return Promise.reject('请输入角色名称');\n    }\n    if (value.length > 5) {\n      return Promise.reject('最多输入5位');\n    }\n    return Promise.resolve();\n  }\n  exports.defineComponent = defineComponent;\n  exports.toRaw = toRaw;\n  exports.onValidateRoleName = onValidateRoleName;\n  return exports;\n}})()"
    },
    "initProps": {
      "type": "JSExpression",
      "value": "{\n    style: {\n      type: Object,\n      default: {}\n    },\n  }"
    },
    "mounted": {
      "type": "JSFunction",
      "value": "function () {\n    this.getRoleList();\n  }"
    },
    "beforeMount": {
      "type": "JSFunction",
      "value": "function () {\n    console.log('will unmount');\n  }"
    }
  },
  "originCode": "class LowcodeComponent extends Component {\n  state = {\n    \"text\": \"outer\",\n    \"isShowDialog\": false,\n    \"info\": {\n      \"info\": \"\",\n      \"user\": {\n        \"username\": \"\",\n        \"password\": \"\"\n      }\n    }\n  }\n  componentDidMount() {\n    console.log('did mount');\n  }\n  componentWillUnmount() {\n    console.log('will unmount');\n  }\n  testFunc() {\n    console.log('test func');\n  }\n  onClick() {\n    this.setState({\n      isShowDialog: true\n    })\n  }\n  closeDialog() {\n    this.setState({\n      isShowDialog: false\n    })\n  }\n\n\tonClick_new(){\n    this.$message.success('hhhhhh')\n\t}\n\n\tonSubmit(ev){\n    ev.preventDefault();\n    this.dataSourceMap.submit.load()\n\t}\n}",
  "hidden": false,
  "title": "",
  "isLocked": false,
  "condition": true,
  "conditionGroup": "",
  "meta": {
    "originCode": "import { defineComponent,toRaw } from 'vue';\nconst onValidateRoleName=(rule, value)=>{\n  if (!value) {\n    return Promise.reject('请输入角色名称');\n  }\n  if (value.length > 5) {\n    return Promise.reject('最多输入5位');\n  }\n  return Promise.resolve();\n}\nexport default defineComponent({\n  props: {\n    style: {\n      type: Object,\n      default: {}\n    },\n  },\n  data: () => ({\n    text:\"outer\",\n    isShowDialog:false,\n    showAdd:false,\n    showDetail:false,\n    matchFields:{},\n    loading:false,\n    roleMap:{\n      \"1\":\"运营\",\n      \"2\":\"运维\",\n      \"3\":\"运营，运维\"\n    },\n    page:{\n      pageNumber:1,\n      pageSize:10\n    },\n    sort:{\n      key:\"id\",\n      sortType:\"ASC\"\n    },\n    list:[],\n    options:[],\n    selection:[],\n    form:{\n      roleName:'',\n      roleType:''\n    },\n    rules:{\n      roleName: [{ required: true, message: '', trigger: 'onBlur' },{ validator: onValidateRoleName,trigger:'onBlur'}],\n      roleType:[{required:true,message:'请选择角色类型',trigger:'onChange'}]\n    },\n    currentRow:{},\n    delDisabled:true,\n    delBtnClicked:false,\n    idArr:[],\n    formLoading:false\n  }),\n  methods: {\n    onAddSure(e){\n      console.log('确定新增',e.target.value);\n    },\n    onAddReset(){\n      this.$refs['form_7xo2'].resetFields();\n    },\n    onRole(row){\n      console.log('onRow',row);\n      return `row.id`;\n    },\n    onDetail(e,row){   \n      this.showDetail = true;\n      this.currentRow = toRaw(row.data);\n      // console.log('详情', this.currentRow);\n    },\n    onCloseDetail(){\n      this.showDetail = false;\n    },\n    onAdd(){\n      this.showAdd = true;\n      console.log('点击新增后--->',this.showAdd);\n      console.log('新增表单实例', this.$refs['form_7xo2']);\n    },\n    onCloseAdd(){\n      this.showAdd = false;\n    },\n    onRemove(id){\n     this.delBtnClicked = true;\n     if(!this.selection.length){\n        return;\n     }\n      this.idArr = this.selection.map(item=>item.id);\n      console.log('要删除的id', this.idArr);\n    },\n    onRoleChange(e){\n      this.matchFields.roleName = e.target.value;\n      console.log('角色名称change', e.target.value);\n    },\n    onSearch(){\n      console.log('查询',this.matchFields);\n      this.getRoleList();\n    },\n    onReset(){\n      this.delBtnClicked = false;\n      this.selection={};\n      this.matchFields={};\n      this.page={\n        pageNumber:1,\n        pageSize:10\n      };\n      window.LowcodeMaterialAntVue.message.info({\n        content:'哈哈哈'\n      })\n      console.log('重置', window.LowcodeMaterialAntVue.message);\n    },\n    onConfirm(e){\n      console.log('idArr',this.idArr,'selection',this.selection);\n      if(!this.idArr.length){\n        return;\n      }\n      this.dataSourceMap.deleteRole.load({ id: this.idArr }).then(res=>{\n        console.log('删除res',res);\n        window.LowcodeMaterialAntVue.message.success(\"删除成功\");\n      }).catch(err=>{\n        console.log('删除失败',err);\n        window.LowcodeMaterialAntVue.message.error(\"删除失败\");\n      }).finally(()=>{\n        this.delBtnClicked = false;\n      }) \n    },\n    getRoleList(){\n      this.loading = true;\n      let params={}\n      this.dataSourceMap.list.load({matchFields:toRaw(this.matchFields),page:toRaw(this.page)}).then(res => {\n        this.loading = false;\n        this.list = res.body.list || [];\n        console.log('角色列表数据', this.list);\n\n      }).catch(err => {\n        this.loading = false;\n        console.log('err', err);\n      })\n    },\n    handleDeselect(val){\n      const findIndex=this.selection.findIndex(item=>{\n        return item.id=== val.id\n      })\n      if(~findIndex){\n        this.selection.splice(findIndex,1);\n      }\n    },\n    onSelectAll(checked,val){\n      this.selection = val;\n      this.delDisabled = !this.selection.length;\n      console.log(\"全选\",val,checked);\n    },\n    handleSelectionChange(val,checked){\n      console.log('选中改变',val,checked);\n      if(checked && !this.selection.includes(val)){\n        this.selection.push(val);\n      }\n      if(!checked){\n        this.handleDeselect(val);\n      }\n      this.delDisabled = !this.selection.length;\n      console.log('最后选中',this.selection);\n    },\n    onRoleNameChange(e){\n      const val = e.target.value;\n      this.form.roleName = val;\n      console.log('角色名',val,typeof val);\n    },\n    onRoleTypeChange(val){\n      this.form.roleType = val||'';\n      console.log('角色选择完',val);\n    },\n    onResetForm(e){\n      console.log('重置表单--->',e);\n    },\n    onFinish(val){\n      this.formLoading = true;\n      console.log('onFinish表单校验成功',val);\n      this.dataSourceMap.addRole.load({data:this.form}).then(res=>{\n        console.log('新增角色成功',res);\n        this.formLoading = false;\n        window.LowcodeMaterialAntVue.message.success(\"新增角色成功\");\n      }).catch(err=>{\n        console.log('新增角色失败',err);\n        this.formLoading = false;\n        window.LowcodeMaterialAntVue.message.error(\"新增角色失败\");\n      }).finally(()=>{\n        this.showAdd = false;\n      })\n    },\n    onFinishFailed(val,field){\n      console.log('onFinishFailed表单校验失败',val,field);\n    },\n    onFormValidate(name,status,errorMsg){\n      console.log('任一表单项被校验后触发',name,status,errorMsg);\n    },\n    onSubmit(e){\n      console.log('新增弹窗submit', e.target.value, '表单', this.$refs['form_7xo2']);\n      this.$refs['form_7xo2'].validate((valid)=>{\n        console.log('校验是否通过',valid);\n      })\n    },\n  },\n  mounted() {\n    this.getRoleList();\n  },\n  beforeMount() {\n    console.log('will unmount');\n  },\n})\n"
  },
  "state": {
    "text": "outer",
    "isShowDialog": false,
    "showAdd": false,
    "showDetail": false,
    "matchFields": {},
    "loading": false,
    "roleMap": {
      "1": "运营",
      "2": "运维",
      "3": "运营，运维"
    },
    "page": {
      "pageNumber": 1,
      "pageSize": 10
    },
    "sort": {
      "key": "id",
      "sortType": "ASC"
    },
    "list": [],
    "options": [],
    "selection": [],
    "form": {
      "roleName": "",
      "roleType": ""
    },
    "rules": {
      "roleName": [
        {
          "required": true,
          "message": "",
          "trigger": "onBlur"
        },
        {
          "validator": {
            "type": "JSExpression",
            "value": "onValidateRoleName"
          },
          "trigger": "onBlur"
        }
      ],
      "roleType": [
        {
          "required": true,
          "message": "请选择角色类型",
          "trigger": "onChange"
        }
      ]
    },
    "currentRow": {},
    "delDisabled": true,
    "delBtnClicked": false,
    "idArr": [],
    "formLoading": false
  },
  "methods": {
    "onAddSure": {
      "type": "JSFunction",
      "value": "function (e){\n      console.log('确定新增',e.target.value);\n    }"
    },
    "onAddReset": {
      "type": "JSFunction",
      "value": "function (){\n      this.$refs['form_7xo2'].resetFields();\n    }"
    },
    "onRole": {
      "type": "JSFunction",
      "value": "function (row){\n      console.log('onRow',row);\n      return `row.id`;\n    }"
    },
    "onDetail": {
      "type": "JSFunction",
      "value": "function (e,row){   \n      this.showDetail = true;\n      this.currentRow = toRaw(row.data);\n      // console.log('详情', this.currentRow);\n    }"
    },
    "onCloseDetail": {
      "type": "JSFunction",
      "value": "function (){\n      this.showDetail = false;\n    }"
    },
    "onAdd": {
      "type": "JSFunction",
      "value": "function (){\n      this.showAdd = true;\n      console.log('点击新增后--->',this.showAdd);\n      console.log('新增表单实例', this.$refs['form_7xo2']);\n    }"
    },
    "onCloseAdd": {
      "type": "JSFunction",
      "value": "function (){\n      this.showAdd = false;\n    }"
    },
    "onRemove": {
      "type": "JSFunction",
      "value": "function (id){\n     this.delBtnClicked = true;\n     if(!this.selection.length){\n        return;\n     }\n      this.idArr = this.selection.map(item=>item.id);\n      console.log('要删除的id', this.idArr);\n    }"
    },
    "onRoleChange": {
      "type": "JSFunction",
      "value": "function (e){\n      this.matchFields.roleName = e.target.value;\n      console.log('角色名称change', e.target.value);\n    }"
    },
    "onSearch": {
      "type": "JSFunction",
      "value": "function (){\n      console.log('查询',this.matchFields);\n      this.getRoleList();\n    }"
    },
    "onReset": {
      "type": "JSFunction",
      "value": "function (){\n      this.delBtnClicked = false;\n      this.selection={};\n      this.matchFields={};\n      this.page={\n        pageNumber:1,\n        pageSize:10\n      };\n      window.LowcodeMaterialAntVue.message.info({\n        content:'哈哈哈'\n      })\n      console.log('重置', window.LowcodeMaterialAntVue.message);\n    }"
    },
    "onConfirm": {
      "type": "JSFunction",
      "value": "function (e){\n      console.log('idArr',this.idArr,'selection',this.selection);\n      if(!this.idArr.length){\n        return;\n      }\n      this.dataSourceMap.deleteRole.load({ id: this.idArr }).then(res=>{\n        console.log('删除res',res);\n        window.LowcodeMaterialAntVue.message.success(\"删除成功\");\n      }).catch(err=>{\n        console.log('删除失败',err);\n        window.LowcodeMaterialAntVue.message.error(\"删除失败\");\n      }).finally(()=>{\n        this.delBtnClicked = false;\n      }) \n    }"
    },
    "getRoleList": {
      "type": "JSFunction",
      "value": "function (){\n      this.loading = true;\n      let params={}\n      this.dataSourceMap.list.load({matchFields:toRaw(this.matchFields),page:toRaw(this.page)}).then(res => {\n        this.loading = false;\n        this.list = res.body.list || [];\n        console.log('角色列表数据', this.list);\n\n      }).catch(err => {\n        this.loading = false;\n        console.log('err', err);\n      })\n    }"
    },
    "handleDeselect": {
      "type": "JSFunction",
      "value": "function (val){\n      const findIndex=this.selection.findIndex(item=>{\n        return item.id=== val.id\n      })\n      if(~findIndex){\n        this.selection.splice(findIndex,1);\n      }\n    }"
    },
    "onSelectAll": {
      "type": "JSFunction",
      "value": "function (checked,val){\n      this.selection = val;\n      this.delDisabled = !this.selection.length;\n      console.log(\"全选\",val,checked);\n    }"
    },
    "handleSelectionChange": {
      "type": "JSFunction",
      "value": "function (val,checked){\n      console.log('选中改变',val,checked);\n      if(checked && !this.selection.includes(val)){\n        this.selection.push(val);\n      }\n      if(!checked){\n        this.handleDeselect(val);\n      }\n      this.delDisabled = !this.selection.length;\n      console.log('最后选中',this.selection);\n    }"
    },
    "onRoleNameChange": {
      "type": "JSFunction",
      "value": "function (e){\n      const val = e.target.value;\n      this.form.roleName = val;\n      console.log('角色名',val,typeof val);\n    }"
    },
    "onRoleTypeChange": {
      "type": "JSFunction",
      "value": "function (val){\n      this.form.roleType = val||'';\n      console.log('角色选择完',val);\n    }"
    },
    "onResetForm": {
      "type": "JSFunction",
      "value": "function (e){\n      console.log('重置表单--->',e);\n    }"
    },
    "onFinish": {
      "type": "JSFunction",
      "value": "function (val){\n      this.formLoading = true;\n      console.log('onFinish表单校验成功',val);\n      this.dataSourceMap.addRole.load({data:this.form}).then(res=>{\n        console.log('新增角色成功',res);\n        this.formLoading = false;\n        window.LowcodeMaterialAntVue.message.success(\"新增角色成功\");\n      }).catch(err=>{\n        console.log('新增角色失败',err);\n        this.formLoading = false;\n        window.LowcodeMaterialAntVue.message.error(\"新增角色失败\");\n      }).finally(()=>{\n        this.showAdd = false;\n      })\n    }"
    },
    "onFinishFailed": {
      "type": "JSFunction",
      "value": "function (val,field){\n      console.log('onFinishFailed表单校验失败',val,field);\n    }"
    },
    "onFormValidate": {
      "type": "JSFunction",
      "value": "function (name,status,errorMsg){\n      console.log('任一表单项被校验后触发',name,status,errorMsg);\n    }"
    },
    "onSubmit": {
      "type": "JSFunction",
      "value": "function (e){\n      console.log('新增弹窗submit', e.target.value, '表单', this.$refs['form_7xo2']);\n      this.$refs['form_7xo2'].validate((valid)=>{\n        console.log('校验是否通过',valid);\n      })\n    }"
    }
  },
  "children": [
    {
      "componentName": "AFormList",
      "id": "node_oclhst9qc31",
      "props": {
        "name": "",
        "style": {
          "backgroundColor": "#fff",
          "padding": "10px 0",
          "display": "flex",
          "justifyContent": "space-between"
        }
      },
      "docId": "doclhst9rxx",
      "hidden": false,
      "title": "",
      "isLocked": false,
      "condition": true,
      "conditionGroup": "",
      "children": [
        {
          "componentName": "AFormList",
          "id": "node_oclhst9zzc2",
          "props": {
            "name": ""
          },
          "docId": "doclhst9zzc",
          "hidden": false,
          "title": "",
          "isLocked": false,
          "condition": true,
          "conditionGroup": "",
          "children": [
            {
              "componentName": "AButton",
              "id": "node_oclhst9rxx4",
              "props": {
                "type": "primary",
                "children": "新增",
                "htmlType": "button",
                "size": "middle",
                "shape": "default",
                "block": false,
                "danger": false,
                "ghost": false,
                "disabled": false,
                "style": {
                  "marginLeft": "10px",
                  "fontSize": "12px"
                },
                "__events": {
                  "eventDataList": [
                    {
                      "type": "componentEvent",
                      "name": "onClick",
                      "relatedEventName": "onAdd"
                    }
                  ],
                  "eventList": [
                    {
                      "name": "onClick",
                      "template": "onClick(event,${extParams}){\n// 点击按钮时的回调\nconsole.log('onClick', event);}",
                      "disabled": true
                    }
                  ]
                },
                "onClick": {
                  "type": "JSFunction",
                  "value": "function(){return this.onAdd.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
                }
              },
              "docId": "doclhst9zzc",
              "hidden": false,
              "title": "",
              "isLocked": false,
              "condition": true,
              "conditionGroup": "",
              "loopArgs": [
                "",
                ""
              ]
            },
            {
              "componentName": "APopconfirm",
              "id": "node_oclht2r3a36",
              "props": {
                "title": "确定删除选中角色？",
                "okType": "primary",
                "okText": "确定",
                "cancelText": "取消",
                "okButtonProps": {},
                "cancelButtonProps": {},
                "disabled": false,
                "__events": {
                  "eventDataList": [
                    {
                      "type": "componentEvent",
                      "name": "onConfirm",
                      "relatedEventName": "onConfirm"
                    }
                  ],
                  "eventList": [
                    {
                      "name": "onConfirm",
                      "template": "onConfirm(${extParams}){\n// 点击确认的回调\nconsole.log('onConfirm');}",
                      "disabled": true
                    }
                  ]
                },
                "onConfirm": {
                  "type": "JSFunction",
                  "value": "function(){return this.onConfirm.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
                },
                "visible": {
                  "type": "JSExpression",
                  "value": "this.delBtnClicked && !this.delDisabled",
                  "mock": false
                }
              },
              "docId": "doclht2r3a3",
              "hidden": false,
              "title": "",
              "isLocked": false,
              "condition": true,
              "conditionGroup": "",
              "children": [
                {
                  "componentName": "AButton",
                  "id": "node_oclht2r3a37",
                  "props": {
                    "children": "删除",
                    "htmlType": "button",
                    "size": "middle",
                    "shape": "default",
                    "block": false,
                    "danger": false,
                    "ghost": false,
                    "disabled": {
                      "type": "JSExpression",
                      "value": "this.delDisabled",
                      "mock": false
                    },
                    "__events": {
                      "eventDataList": [
                        {
                          "type": "componentEvent",
                          "name": "onClick",
                          "relatedEventName": "onRemove"
                        }
                      ],
                      "eventList": [
                        {
                          "name": "onClick",
                          "template": "onClick(event,${extParams}){\n// 点击按钮时的回调\nconsole.log('onClick', event);}",
                          "disabled": true
                        }
                      ]
                    },
                    "style": {
                      "margin": "0 10px",
                      "fontSize": "12px"
                    },
                    "onClick": {
                      "type": "JSFunction",
                      "value": "function(){return this.onRemove.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
                    }
                  },
                  "docId": "doclht2r3a3",
                  "hidden": false,
                  "title": "",
                  "isLocked": false,
                  "condition": true,
                  "conditionGroup": ""
                }
              ]
            }
          ]
        },
        {
          "componentName": "AFormList",
          "id": "node_oclhst9rxx7",
          "props": {
            "name": {
              "type": "JSExpression",
              "value": "this.matchFields.roleName",
              "mock": ""
            }
          },
          "docId": "doclhst9zzc",
          "hidden": false,
          "title": "",
          "isLocked": false,
          "condition": true,
          "conditionGroup": "",
          "loopArgs": [
            "",
            ""
          ],
          "children": [
            {
              "componentName": "AInput",
              "id": "node_oclhst9qc32",
              "props": {
                "type": "text",
                "size": "default",
                "placeholder": "请输入",
                "autocomplete": "off",
                "label": "",
                "bordered": true,
                "disabled": false,
                "id": "",
                "name": "",
                "prefix": "角色名称:",
                "style": {
                  "width": "213px",
                  "marginRight": "10px"
                },
                "__events": {
                  "eventDataList": [
                    {
                      "type": "componentEvent",
                      "name": "onChange",
                      "relatedEventName": "onRoleChange"
                    }
                  ],
                  "eventList": [
                    {
                      "name": "onChange",
                      "template": "onChange(event,${extParams}){\n// 输入框内容变化时的回调\nconsole.log('onChange',event);}",
                      "disabled": true
                    },
                    {
                      "name": "onPressEnter",
                      "template": "onPressEnter(event,${extParams}){\n// 按下回车的回调\nconsole.log('onPressEnter',event);}",
                      "disabled": false
                    },
                    {
                      "name": "onFocus",
                      "template": "onFocus(event,${extParams}){\n// 获取焦点回调\nconsole.log('onFocus',event);}",
                      "disabled": false
                    },
                    {
                      "name": "onKeyDown",
                      "template": "onKeyDown(event,${extParams}){\n// 按键按下时的回调\nconsole.log('onKeyDown',event);}",
                      "disabled": false
                    },
                    {
                      "name": "onKeyPress",
                      "template": "onKeyPress(event,${extParams}){\n// 按键按下后的回调\nconsole.log('onKeyPress',event);}",
                      "disabled": false
                    },
                    {
                      "name": "onKeyUp",
                      "template": "onKeyUp(event,${extParams}){\n// 按键释放回调\nconsole.log('onKeyUp',event);}",
                      "disabled": false
                    },
                    {
                      "name": "onBlur",
                      "template": "onBlur(event,${extParams}){\n// 按键释放回调\nconsole.log('onBlur',event);}",
                      "disabled": false
                    }
                  ]
                },
                "onChange": {
                  "type": "JSFunction",
                  "value": "function(){return this.onRoleChange.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
                },
                "defaultValue": {
                  "type": "JSExpression",
                  "value": "this.matchFields.securityId"
                },
                "value": {
                  "type": "JSExpression",
                  "value": "this.matchFields.securityId"
                }
              },
              "docId": "doclhst9rxx",
              "hidden": false,
              "title": "",
              "isLocked": false,
              "condition": true,
              "conditionGroup": "",
              "loopArgs": [
                "",
                ""
              ]
            },
            {
              "componentName": "AButton",
              "id": "node_oclhst9rxx8",
              "props": {
                "type": "primary",
                "children": "查询",
                "htmlType": "button",
                "size": "middle",
                "shape": "default",
                "block": false,
                "danger": false,
                "ghost": false,
                "disabled": false,
                "style": {
                  "fontSize": "12px"
                },
                "__events": {
                  "eventDataList": [
                    {
                      "type": "componentEvent",
                      "name": "onClick",
                      "relatedEventName": "onSearch"
                    }
                  ],
                  "eventList": [
                    {
                      "name": "onClick",
                      "template": "onClick(event,${extParams}){\n// 点击按钮时的回调\nconsole.log('onClick', event);}",
                      "disabled": true
                    }
                  ]
                },
                "onClick": {
                  "type": "JSFunction",
                  "value": "function(){return this.onSearch.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
                }
              },
              "docId": "doclhst9zzc",
              "hidden": false,
              "title": "",
              "isLocked": false,
              "condition": true,
              "conditionGroup": ""
            },
            {
              "componentName": "AButton",
              "id": "node_oclhst9rxx9",
              "props": {
                "type": "default",
                "children": "重置",
                "htmlType": "button",
                "size": "middle",
                "shape": "default",
                "block": false,
                "danger": false,
                "ghost": false,
                "disabled": false,
                "style": {
                  "margin": "0 10px",
                  "fontSize": "12px"
                },
                "__events": {
                  "eventDataList": [
                    {
                      "type": "componentEvent",
                      "name": "onClick",
                      "relatedEventName": "onReset"
                    }
                  ],
                  "eventList": [
                    {
                      "name": "onClick",
                      "template": "onClick(event,${extParams}){\n// 点击按钮时的回调\nconsole.log('onClick', event);}",
                      "disabled": true
                    }
                  ]
                },
                "onClick": {
                  "type": "JSFunction",
                  "value": "function(){return this.onReset.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
                }
              },
              "docId": "doclhst9zzc",
              "hidden": false,
              "title": "",
              "isLocked": false,
              "condition": true,
              "conditionGroup": ""
            }
          ]
        }
      ]
    },
    {
      "componentName": "AModal",
      "id": "node_oclhq0dhj74",
      "props": {
        "title": "详情",
        "okText": "确认",
        "cancelText": "取消",
        "open": true,
        "destroyOnClose": true,
        "visible": {
          "type": "JSExpression",
          "value": "this.showDetail",
          "mock": false
        },
        "centered": true,
        "closable": true,
        "confirmLoading": false,
        "forceRender": false,
        "keyboard": true,
        "mask": true,
        "maskClosable": true,
        "okType": "primary",
        "bodyStyle": {},
        "maskStyle": {},
        "__events": {
          "eventDataList": [
            {
              "type": "componentEvent",
              "name": "onCancel",
              "relatedEventName": "onCloseDetail"
            }
          ],
          "eventList": [
            {
              "name": "onCancel",
              "disabled": true
            },
            {
              "name": "onOk",
              "disabled": false
            }
          ]
        },
        "onCancel": {
          "type": "JSFunction",
          "value": "function(){return this.onCloseDetail.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
        },
        "_unsafe_MixedSetter_title_select": "StringSetter",
        "footer": "",
        "okButtonProps": {
          "disabled": true
        },
        "_unsafe_MixedSetter_footer_select": "SlotSetter",
        "dialogStyle": {}
      },
      "docId": "doclhq0dhj7",
      "hidden": true,
      "title": "",
      "isLocked": false,
      "condition": true,
      "conditionGroup": "",
      "children": [
        {
          "componentName": "ADescriptions",
          "id": "node_oclhq67uk61",
          "props": {
            "title": "用户信息",
            "items": [
              {
                "key": "426f",
                "label": "序号",
                "span": 1,
                "children": {
                  "type": "JSExpression",
                  "value": "this.currentRow.id"
                }
              },
              {
                "key": "4m3g",
                "label": "角色名称",
                "span": 1,
                "children": {
                  "type": "JSExpression",
                  "value": "this.currentRow.roleName"
                }
              },
              {
                "key": "bxk1",
                "label": "角色类型",
                "span": 1,
                "children": {
                  "type": "JSExpression",
                  "value": "this.currentRow.roleType"
                }
              },
              {
                "key": "5fk3",
                "label": "标签",
                "span": 1,
                "children": {
                  "type": "JSExpression",
                  "value": "this.currentRow.tag"
                }
              }
            ],
            "bordered": true,
            "column": 2,
            "size": "default",
            "layout": "horizontal",
            "colon": true
          },
          "docId": "doclhst9ivf",
          "hidden": false,
          "title": "",
          "isLocked": false,
          "condition": true,
          "conditionGroup": "",
          "children": [
            {
              "componentName": "Descriptions.Item",
              "id": "node_oclhq67uk63",
              "props": {
                "key": "426f",
                "label": "序号",
                "span": 1,
                "children": {
                  "type": "JSExpression",
                  "value": "this.currentRow.id"
                }
              },
              "docId": "doclhst9ivf",
              "hidden": false,
              "title": "",
              "isLocked": false,
              "condition": true,
              "conditionGroup": ""
            },
            {
              "componentName": "Descriptions.Item",
              "id": "node_oclhq67uk6g",
              "props": {
                "key": "4m3g",
                "label": "角色名称",
                "span": 1,
                "children": {
                  "type": "JSExpression",
                  "value": "this.currentRow.roleName"
                }
              },
              "docId": "doclhst9ivf",
              "hidden": false,
              "title": "",
              "isLocked": false,
              "condition": true,
              "conditionGroup": ""
            },
            {
              "componentName": "Descriptions.Item",
              "id": "node_oclhq67uk68",
              "props": {
                "key": "bxk1",
                "label": "角色类型",
                "span": 1,
                "children": {
                  "type": "JSExpression",
                  "value": "this.currentRow.roleType"
                }
              },
              "docId": "doclhst9ivf",
              "hidden": false,
              "title": "",
              "isLocked": false,
              "condition": true,
              "conditionGroup": ""
            },
            {
              "componentName": "Descriptions.Item",
              "id": "node_oclhq67uk6c",
              "props": {
                "key": "5fk3",
                "label": "标签",
                "span": 1,
                "children": {
                  "type": "JSExpression",
                  "value": "this.currentRow.tag"
                }
              },
              "docId": "doclhst9ivf",
              "hidden": false,
              "title": "",
              "isLocked": false,
              "condition": true,
              "conditionGroup": ""
            }
          ]
        }
      ]
    },
    {
      "componentName": "ATable",
      "id": "node_oclhst9rxx5",
      "props": {
        "dataSource": [
          {
            "id": "1",
            "roleName": "总部管理",
            "roleType": "3",
            "address": "西湖区湖底公园1号"
          },
          {
            "id": "2",
            "roleName": "邓紫棋",
            "roleType": "2",
            "address": "滨江区网商路699号"
          }
        ],
        "columns": [
          {
            "title": "序号",
            "dataIndex": "id",
            "key": "",
            "align": "left",
            "fixed": "",
            "width": 60,
            "sorter": false,
            "sortDirections": "",
            "sortOrder": "",
            "ellipsis": false,
            "filterSearch": false,
            "filterMultiple": false,
            "filterMode": "menu",
            "_unsafe_MixedSetter_dataIndex_select": "StringSetter"
          },
          {
            "title": "角色名称",
            "dataIndex": "roleName",
            "key": "roleName",
            "align": "left",
            "fixed": "",
            "ellipsis": false,
            "filterSearch": false,
            "filterMultiple": false,
            "filterMode": "menu"
          },
          {
            "title": "角色类型",
            "dataIndex": "roleType",
            "key": "roleType",
            "align": "left",
            "fixed": "",
            "ellipsis": false,
            "filterSearch": false,
            "filterMultiple": false,
            "filterMode": "menu",
            "customRender": {
              "type": "JSSlot",
              "params": [
                "data"
              ],
              "value": [
                {
                  "componentName": "ATag",
                  "id": "node_oclht2r3a34",
                  "props": {
                    "color": "magenta",
                    "children": {
                      "type": "JSExpression",
                      "value": "this.roleMap[this.data.record.roleType]",
                      "mock": "标签"
                    },
                    "closable": false,
                    "visible": true
                  },
                  "docId": "doclht2r3a3",
                  "hidden": false,
                  "title": "",
                  "isLocked": false,
                  "condition": true,
                  "conditionGroup": ""
                }
              ],
              "id": "node_oclht2r3a33"
            }
          },
          {
            "title": "操作",
            "align": "left",
            "fixed": "right",
            "ellipsis": false,
            "filterSearch": false,
            "filterMultiple": false,
            "filterMode": "menu",
            "render": {
              "type": "JSSlot",
              "params": [
                "data"
              ],
              "id": "node_oclhst9rxxe"
            },
            "customRender": {
              "type": "JSSlot",
              "params": [
                "data"
              ],
              "value": [
                {
                  "componentName": "AButton",
                  "id": "node_oclhq0dhj72",
                  "props": {
                    "type": "text",
                    "children": "详情",
                    "htmlType": "button",
                    "size": "middle",
                    "shape": "default",
                    "block": false,
                    "danger": false,
                    "ghost": false,
                    "disabled": false,
                    "__events": {
                      "eventDataList": [
                        {
                          "type": "componentEvent",
                          "name": "onClick",
                          "relatedEventName": "onDetail",
                          "paramStr": "{\n \t \"data\":this.data.record\n}"
                        }
                      ],
                      "eventList": [
                        {
                          "name": "onClick",
                          "template": "onClick(event,${extParams}){\n// 点击按钮时的回调\nconsole.log('onClick', event);}",
                          "disabled": true
                        }
                      ]
                    },
                    "onClick": {
                      "type": "JSFunction",
                      "value": "function(){return this.onDetail.apply(this,Array.prototype.slice.call(arguments).concat([{\n \t \"data\":this.data.record\n}])) }"
                    }
                  },
                  "docId": "doclhq0dhj7",
                  "hidden": false,
                  "title": "",
                  "isLocked": false,
                  "condition": true,
                  "conditionGroup": "",
                  "loopArgs": [
                    "",
                    ""
                  ]
                }
              ],
              "id": "node_oclhq0dhj71"
            },
            "_unsafe_MixedSetter_title_select": "StringSetter",
            "_unsafe_MixedSetter_dataIndex_select": "StringSetter"
          }
        ],
        "rowKey": "id",
        "pagination": {
          "pageSize": {
            "type": "JSExpression",
            "value": "this.page.pageSize",
            "mock": 10
          },
          "total": {
            "type": "JSExpression",
            "value": "this.list.length",
            "mock": 15
          },
          "current": {
            "type": "JSExpression",
            "value": "this.page.pageNumber",
            "mock": 1
          },
          "showSizeChanger": false,
          "showQuickJumper": false,
          "simple": false,
          "size": "default"
        },
        "loading": {
          "type": "JSExpression",
          "value": "this.loading",
          "mock": false
        },
        "showHeader": true,
        "size": "default",
        "tableLayout": "",
        "scroll": {
          "scrollToFirstRowOnChange": true
        },
        "style": {
          "backgroundColor": "#fff",
          "marginTop": "10px"
        },
        "rowSelection": {
          "type": "checkbox",
          "fixed": true,
          "onSelect": {
            "type": "JSFunction",
            "value": "function(){ return this.handleSelectionChange.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
          },
          "onSelectAll": {
            "type": "JSFunction",
            "value": "function(){ return this.onSelectAll.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
          }
        },
        "_unsafe_MixedSetter_rowSelection_select": "VariableSetter"
      },
      "docId": "doclhst9zzc",
      "hidden": false,
      "title": "",
      "isLocked": false,
      "condition": true,
      "conditionGroup": ""
    },
    {
      "componentName": "AModal",
      "id": "node_oclhsta99j1",
      "props": {
        "title": "新增",
        "okText": "",
        "cancelText": "",
        "open": true,
        "destroyOnClose": true,
        "centered": true,
        "closable": true,
        "confirmLoading": false,
        "forceRender": false,
        "keyboard": false,
        "mask": true,
        "maskClosable": false,
        "bodyStyle": {},
        "maskStyle": {},
        "dialogStyle": {},
        "_unsafe_MixedSetter_title_select": "StringSetter",
        "visible": {
          "type": "JSExpression",
          "value": "this.showAdd",
          "mock": true
        },
        "__events": {
          "eventDataList": [
            {
              "type": "componentEvent",
              "name": "onCancel",
              "relatedEventName": "onCloseAdd"
            }
          ],
          "eventList": [
            {
              "name": "onCancel",
              "disabled": true
            },
            {
              "name": "onOk",
              "disabled": false
            }
          ]
        },
        "footer": "",
        "okType": "default",
        "onCancel": {
          "type": "JSFunction",
          "value": "function(){return this.onCloseAdd.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
        }
      },
      "docId": "doclhsta99j",
      "hidden": true,
      "title": "",
      "isLocked": false,
      "condition": true,
      "conditionGroup": "",
      "loopArgs": [
        "",
        ""
      ],
      "children": [
        {
          "componentName": "AForm",
          "id": "node_oclhsyiwkp1",
          "props": {
            "labelCol": {
              "span": 6,
              "labelAlign": "left"
            },
            "onFinish": {
              "type": "JSFunction",
              "value": "function(){return this.onFinish.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
            },
            "onFinishFailed": {
              "type": "JSFunction",
              "value": "function(){return this.onFinishFailed.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
            },
            "name": "basic",
            "ref": "form_7xo2",
            "colon": true,
            "hideRequiredMark": false,
            "preserve": true,
            "scrollToFirstError": true,
            "validateMessages": {
              "required": "${name}不能为空"
            },
            "validateTrigger": "onChange",
            "__events": {
              "eventDataList": [
                {
                  "type": "componentEvent",
                  "name": "onFinish",
                  "relatedEventName": "onFinish"
                },
                {
                  "type": "componentEvent",
                  "name": "onFinishFailed",
                  "relatedEventName": "onFinishFailed"
                },
                {
                  "type": "componentEvent",
                  "name": "onValidate",
                  "relatedEventName": "onFormValidate"
                },
                {
                  "type": "componentEvent",
                  "name": "onSubmit",
                  "relatedEventName": "onSubmit"
                }
              ],
              "eventList": [
                {
                  "name": "onFinish",
                  "template": "onFinish(values,${extParams}){\n// 提交表单且数据验证成功后回调事件\nconsole.log('onFinish',values);}",
                  "disabled": true
                },
                {
                  "name": "onFinishFailed",
                  "template": "onFinishFailed({values,errorFields,outOfDate},${extParams}){\n// 提交表单且数据验证失败后回调事件\nconsole.log('onFinishFailed',values, errorFields, outOfDate);}",
                  "disabled": true
                },
                {
                  "name": "onSubmit",
                  "template": "onSubmit(e,${extParams}){\n// 数据验证成功后回调事件\nconsole.log('onSubmit',e);}",
                  "disabled": true
                },
                {
                  "name": "onValidate",
                  "template": "onValidate(name,status,errorMsgs,${extParams}){\n// 任一表单项被校验后触发\nconsole.log('onValidate',name,status,errorMsgs);}",
                  "disabled": true
                }
              ]
            },
            "model": {
              "type": "JSExpression",
              "value": "this.form"
            },
            "onResetFields": {
              "type": "JSExpression",
              "value": "onResetForm()"
            },
            "onValidate": {
              "type": "JSFunction",
              "value": "function(){return this.onFormValidate.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
            },
            "onSubmit": {
              "type": "JSFunction",
              "value": "function(){return this.onSubmit.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
            }
          },
          "docId": "doclhsyiwkp",
          "hidden": false,
          "title": "",
          "isLocked": false,
          "condition": true,
          "conditionGroup": "",
          "loopArgs": [
            "",
            ""
          ],
          "children": [
            {
              "componentName": "AFormItem",
              "id": "node_oclhsyiwkp2",
              "props": {
                "label": "角色名称",
                "labelAlign": "right",
                "colon": true,
                "required": true,
                "valuePropName": "value",
                "name": "roleName",
                "typeobj": {
                  "type": "",
                  "message": ""
                },
                "lenobj": {
                  "max": 5,
                  "min": 1,
                  "message": "请最多输入5位"
                },
                "extra": "",
                "noStyle": false,
                "hasFeedback": false,
                "rules": {
                  "type": "JSExpression",
                  "value": "this.rules.roleName"
                },
                "validateFirst": false,
                "validateTrigger": "onBlur",
                "_unsafe_MixedSetter_rules_select": "ExpressionSetter",
                "_unsafe_MixedSetter_validateTrigger_select": "ArraySetter",
                "patternobj": {
                  "pattern": "",
                  "message": ""
                },
                "autoLink": true,
                "initialValue": {
                  "type": "JSExpression",
                  "value": "this.form.roleName"
                },
                "_unsafe_MixedSetter_requiredobj_select": "ObjectSetter",
                "requiredobj": {
                  "required": true,
                  "message": ""
                },
                "validator": {
                  "type": "JSExpression",
                  "value": "this.rules.roleName"
                }
              },
              "docId": "doclhsyiwkp",
              "hidden": false,
              "title": "",
              "isLocked": false,
              "condition": true,
              "conditionGroup": "",
              "loopArgs": [
                "",
                ""
              ],
              "children": [
                {
                  "componentName": "AInput",
                  "id": "node_oclhsyiwkp3",
                  "props": {
                    "name": "",
                    "size": "default",
                    "placeholder": "请输入角色名称",
                    "value": {
                      "type": "JSExpression",
                      "value": "this.form.roleName"
                    },
                    "label": "角色名称",
                    "bordered": true,
                    "disabled": false,
                    "id": "",
                    "type": "text",
                    "allowClear": true,
                    "style": {
                      "width": "200px"
                    },
                    "__events": {
                      "eventDataList": [
                        {
                          "type": "componentEvent",
                          "name": "onChange",
                          "relatedEventName": "onRoleNameChange"
                        }
                      ],
                      "eventList": [
                        {
                          "name": "onChange",
                          "template": "onChange(event,${extParams}){\n// 输入框内容变化时的回调\nconsole.log('onChange',event);}",
                          "disabled": true
                        },
                        {
                          "name": "onPressEnter",
                          "template": "onPressEnter(event,${extParams}){\n// 按下回车的回调\nconsole.log('onPressEnter',event);}",
                          "disabled": false
                        },
                        {
                          "name": "onFocus",
                          "template": "onFocus(event,${extParams}){\n// 获取焦点回调\nconsole.log('onFocus',event);}",
                          "disabled": false
                        },
                        {
                          "name": "onKeyDown",
                          "template": "onKeyDown(event,${extParams}){\n// 按键按下时的回调\nconsole.log('onKeyDown',event);}",
                          "disabled": false
                        },
                        {
                          "name": "onKeyPress",
                          "template": "onKeyPress(event,${extParams}){\n// 按键按下后的回调\nconsole.log('onKeyPress',event);}",
                          "disabled": false
                        },
                        {
                          "name": "onKeyUp",
                          "template": "onKeyUp(event,${extParams}){\n// 按键释放回调\nconsole.log('onKeyUp',event);}",
                          "disabled": false
                        },
                        {
                          "name": "onBlur",
                          "template": "onBlur(event,${extParams}){\n// 按键释放回调\nconsole.log('onBlur',event);}",
                          "disabled": false
                        }
                      ]
                    },
                    "onChange": {
                      "type": "JSFunction",
                      "value": "function(){return this.onRoleNameChange.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
                    },
                    "key": "form-input-1"
                  },
                  "docId": "doclhsyiwkp",
                  "hidden": false,
                  "title": "",
                  "isLocked": false,
                  "condition": true,
                  "conditionGroup": "",
                  "loopArgs": [
                    "",
                    ""
                  ]
                }
              ]
            },
            {
              "componentName": "AFormItem",
              "id": "node_oclhsyiwkp4",
              "props": {
                "label": "角色类型",
                "labelAlign": "right",
                "colon": true,
                "required": true,
                "noStyle": false,
                "valuePropName": "value",
                "name": "roleType",
                "requiredobj": {
                  "required": true,
                  "message": "必填"
                },
                "autoLink": true,
                "hasFeedback": false,
                "validateFirst": false,
                "typeobj": {
                  "message": ""
                },
                "lenobj": {
                  "max": 0,
                  "min": 0,
                  "message": ""
                },
                "patternobj": {
                  "pattern": "",
                  "message": ""
                },
                "rules": {
                  "type": "JSExpression",
                  "value": "this.rules.roleType"
                },
                "validateTrigger": "onChange",
                "_unsafe_MixedSetter_validateTrigger_select": "StringSetter",
                "_unsafe_MixedSetter_rules_select": "ExpressionSetter",
                "extra": "",
                "initialValue": {
                  "type": "JSExpression",
                  "value": "this.form.roleType"
                },
                "style": {}
              },
              "docId": "doclhsyiwkp",
              "hidden": false,
              "title": "",
              "isLocked": false,
              "condition": true,
              "conditionGroup": "",
              "loopArgs": [
                "",
                ""
              ],
              "children": [
                {
                  "componentName": "ASelect",
                  "id": "node_oclhsyiwkpc",
                  "props": {
                    "style": {
                      "width": "200px"
                    },
                    "options": [
                      {
                        "label": "运营",
                        "value": "1"
                      },
                      {
                        "label": "运维",
                        "value": "2"
                      },
                      {
                        "label": "运营,运维",
                        "value": "3"
                      }
                    ],
                    "bordered": true,
                    "value": {
                      "type": "JSExpression",
                      "value": "this.form.roleType"
                    },
                    "allowClear": true,
                    "autoFocus": false,
                    "labelInValue": false,
                    "autoClearSearchValue": true,
                    "showSearch": true,
                    "tokenSeparators": [],
                    "maxTagCount": 0,
                    "maxTagTextLength": 0,
                    "_unsafe_MixedSetter_value_select": "ExpressionSetter",
                    "showArrow": true,
                    "size": "default",
                    "mode": "combobox",
                    "__events": {
                      "eventDataList": [
                        {
                          "type": "componentEvent",
                          "name": "onChange",
                          "relatedEventName": "onRoleTypeChange"
                        }
                      ],
                      "eventList": [
                        {
                          "name": "onBlur",
                          "template": "onBlur(${extParams}){\n//失焦回调\n console.log('onBlur')}",
                          "disabled": false
                        },
                        {
                          "name": "onChange",
                          "template": "onChange(value,option){\n console.log('onChange',value,option)}",
                          "disabled": true
                        },
                        {
                          "name": "onDeselect",
                          "template": "onDeselect(value,option){\n console.log('onDeselect',value,option)}",
                          "disabled": false
                        },
                        {
                          "name": "onFocus",
                          "template": "onFocus(${extParams}){\n//聚焦回调\n console.log('onFocus')}",
                          "disabled": false
                        }
                      ]
                    },
                    "onChange": {
                      "type": "JSFunction",
                      "value": "function(){return this.onRoleTypeChange.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
                    },
                    "placeholder": "请选择角色类型"
                  },
                  "docId": "doclhsyiwkp",
                  "hidden": false,
                  "title": "",
                  "isLocked": false,
                  "condition": true,
                  "conditionGroup": "",
                  "loopArgs": [
                    "",
                    ""
                  ]
                }
              ]
            },
            {
              "componentName": "AFormItem",
              "id": "node_oclhsyiwkp9",
              "props": {
                "wrapperCol": {
                  "offset": 7
                },
                "autoLink": true,
                "colon": true,
                "required": false,
                "noStyle": false,
                "valuePropName": "value",
                "hasFeedback": false,
                "typeobj": {
                  "message": ""
                },
                "lenobj": {
                  "max": 0,
                  "min": 0,
                  "message": ""
                },
                "patternobj": {
                  "pattern": "",
                  "message": ""
                },
                "validateFirst": false,
                "validateStatus": "",
                "requiredobj": {
                  "required": "",
                  "message": ""
                }
              },
              "docId": "doclhsyiwkp",
              "hidden": false,
              "title": "",
              "isLocked": false,
              "condition": true,
              "conditionGroup": "",
              "loopArgs": [
                "",
                ""
              ],
              "children": [
                {
                  "componentName": "AButton",
                  "id": "node_oclhsyiwkpa",
                  "props": {
                    "type": "primary",
                    "children": "确定",
                    "htmlType": "submit",
                    "size": "middle",
                    "shape": "default",
                    "block": false,
                    "danger": false,
                    "ghost": false,
                    "disabled": false,
                    "__events": {
                      "eventDataList": [
                        {
                          "type": "componentEvent",
                          "name": "onClick",
                          "relatedEventName": "onAddSure"
                        }
                      ],
                      "eventList": [
                        {
                          "name": "onClick",
                          "template": "onClick(event,${extParams}){\n// 点击按钮时的回调\nconsole.log('onClick', event);}",
                          "disabled": true
                        }
                      ]
                    },
                    "onClick": {
                      "type": "JSFunction",
                      "value": "function(){return this.onAddSure.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
                    },
                    "loading": {
                      "type": "JSExpression",
                      "value": "this.formLoading"
                    }
                  },
                  "docId": "doclhsyiwkp",
                  "hidden": false,
                  "title": "",
                  "isLocked": false,
                  "condition": true,
                  "conditionGroup": "",
                  "loopArgs": [
                    "",
                    ""
                  ]
                },
                {
                  "componentName": "AButton",
                  "id": "node_oclhsyiwkpb",
                  "props": {
                    "type": "text",
                    "style": {
                      "marginLeft": "10px"
                    },
                    "children": "重置",
                    "htmlType": "reset",
                    "size": "middle",
                    "shape": "default",
                    "block": false,
                    "danger": false,
                    "ghost": false,
                    "disabled": false,
                    "__events": {
                      "eventDataList": [
                        {
                          "type": "componentEvent",
                          "name": "onClick",
                          "relatedEventName": "onAddReset"
                        }
                      ],
                      "eventList": [
                        {
                          "name": "onClick",
                          "template": "onClick(event,${extParams}){\n// 点击按钮时的回调\nconsole.log('onClick', event);}",
                          "disabled": true
                        }
                      ]
                    },
                    "onClick": {
                      "type": "JSFunction",
                      "value": "function(){return this.onAddReset.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
                    }
                  },
                  "docId": "doclhsyiwkp",
                  "hidden": false,
                  "title": "",
                  "isLocked": false,
                  "condition": true,
                  "conditionGroup": "",
                  "loopArgs": [
                    "",
                    ""
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
