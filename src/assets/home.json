{
  "componentName": "Page",
  "id": "node_dockcviv8fo1",
  "props": {
    "style": {
      "width": "100%",
      "minHeight": "500px",
      "padding": "10px",
      "backgroundColor": "#ddd"
    }
  },
  "docId": "doclhk9ucvr",
  "fileName": "/",
  "dataSource": {
    "list": [
      {
        "type": "fetch",
        "isInit": false,
        "options": {
          "params": {
            "page": {
              "type": "JSExpression",
              "value": "this.page"
            }
          },
          "method": "POST",
          "isCors": true,
          "timeout": 5000,
          "headers": {
            "Atp-Request-Source": "OSS",
            "Content-Type": "application/json;charset=UTF-8"
          },
          "uri": "/oss/identity/role/list"
        },
        "id": "list"
      },
      {
        "type": "fetch",
        "isInit": false,
        "options": {
          "params": {},
          "method": "POST",
          "isCors": true,
          "timeout": 5000,
          "headers": {
            "Atp-Request-Source": "OSS",
            "Content-Type": "application/json;charset=UTF-8"
          },
          "uri": "/oss/identity/role/delete"
        },
        "id": "deleteRole"
      },
      {
        "type": "fetch",
        "isInit": false,
        "options": {
          "params": {},
          "method": "POST",
          "isCors": true,
          "timeout": 5000,
          "headers": {
            "Atp-Request-Source": "OSS",
            "Content-Type": "application/json;charset=UTF-8;"
          },
          "uri": "/oss/identity/role/add"
        },
        "id": "addRole"
      }
    ]
  },
  "css": "body {\n font-size: 12px;\n}\n/* 选择器 */\n.ant-select-show-search.ant-select:not(.ant-select-customize-input) .ant-select-selector{\n height: 100%;\n background: #ddf4ff;\n border: 1px solid #ddf4ff;\n}\n.ant-select-single.ant-select-show-arrow .ant-select-selection-item, .ant-select-single.ant-select-show-arrow .ant-select-selection-placeholder{\n line-height: 22px;\n color: #5597F9;\n font-size: 12px;\n}\n/* 主按钮 */\n.ant-btn-primary{\n background: #5597F9;\n border-color: #5597F9;\n}\n/* 表格 */\n.ant-table table{\n font-size: 12px;\n}\n.ant-table-small .ant-table-thead > tr > th{\n background-color: #ecf2fb;\n color: #707070;\n height: 24px;\n}\n.ant-table-tbody > tr.ant-table-row:hover > td, .ant-table-tbody > tr > td.ant-table-cell-row-hover{\n background-color: #f7d991;\n}\n.ant-table-thead > tr > th:not(:last-child):not(.ant-table-selection-column):not(.ant-table-row-expand-icon-cell):not([colspan])::before{\n background-color: transparent;\n}\ntr:nth-of-type(even),.ant-table-small .ant-table-selection-column:nth-of-type(even){\n background-color: #f8f8f8;\n}\n.ant-table.ant-table-small .ant-table-title, .ant-table.ant-table-small .ant-table-footer, .ant-table.ant-table-small .ant-table-thead > tr > th, .ant-table.ant-table-small .ant-table-tbody > tr > td, .ant-table.ant-table-small tfoot > tr > th, .ant-table.ant-table-small tfoot > tr > td{\n padding: 0;\n}\n.ant-table-thead>tr>th{\n border-bottom: 1px solid #fff;\n border-right: 1px solid #fff;\n background-color: #fff;\n}\n/* 输入框 */\n.ant-input-affix-wrapper > input.ant-input{\n background: #ddf4ff;\n font-size: 12px;\n color: rgba(0,0,0,.85);\n line-height: 22px;\n}\n/* 区间选择 */\n.ant-picker-input > input{\n  font-size: 12px;\n   color: #5597f9;\n}\n.ant-picker-range-separator{\n   color: #5597f9;\n   font-size: 12px;\n}",
  "originCode": "class LowcodeComponent extends Component {\n  state = {\n    \"text\": \"outer\",\n    \"isShowDialog\": false,\n    \"info\": {\n      \"info\": \"\",\n      \"user\": {\n        \"username\": \"\",\n        \"password\": \"\"\n      }\n    }\n  }\n  componentDidMount() {\n    console.log('did mount');\n  }\n  componentWillUnmount() {\n    console.log('will unmount');\n  }\n  testFunc() {\n    console.log('test func');\n  }\n  onClick() {\n    this.setState({\n      isShowDialog: true\n    })\n  }\n  closeDialog() {\n    this.setState({\n      isShowDialog: false\n    })\n  }\n\n\tonClick_new(){\n    this.$message.success('hhhhhh')\n\t}\n\n\tonSubmit(ev){\n    ev.preventDefault();\n    this.dataSourceMap.submit.load()\n\t}\n}",
  "hidden": false,
  "title": "",
  "isLocked": false,
  "condition": true,
  "conditionGroup": "",
  "meta": {
    "originCode": "import { defineComponent,toRaw } from 'vue';\nconst onValidateRoleName=(rule, value)=>{\n  if (!value) {\n    return Promise.reject('请输入角色名称');\n  }\n  if (value.length > 5) {\n    return Promise.reject('最多输入5位');\n  }\n  return Promise.resolve();\n}\nexport default defineComponent({\n  props: {\n    style: {\n      type: Object,\n      default: {}\n    },\n  },\n  data: () => ({\n    text:\"outer\",\n    isShowDialog:false,\n    showAdd:false,\n    showDetail:false,\n    matchFields:{},\n    loading:false,\n    roleMap:{\n      \"1\":\"运营\",\n      \"2\":\"运维\",\n      \"3\":\"运营，运维\"\n    },\n    page:{\n      pageNumber:1,\n      pageSize:10\n    },\n    sort:{\n      key:\"id\",\n      sortType:\"ASC\"\n    },\n    list:[],\n    options:[],\n    selection:[],\n    form:{\n      roleName:'',\n      roleType:''\n    },\n    rules:{\n      roleName: [{ required: true, message: '', trigger: 'onBlur' },{ validator: onValidateRoleName,trigger:'onBlur'}],\n      roleType:[{required:true,message:'请选择角色类型',trigger:'onChange'}]\n    },\n    currentRow:{},\n    delDisabled:true,\n    delBtnClicked:false,\n    idArr:[],\n    formLoading:false\n  }),\n  methods: {\n    onAddSure(e){\n      console.log('确定新增',e.target.value);\n    },\n    onAddReset(){\n      this.$refs['form_7xo2'].resetFields();\n    },\n    onRole(row){\n      console.log('onRow',row);\n      return `row.id`;\n    },\n    onDetail(e,row){   \n      this.showDetail = true;\n      this.currentRow = toRaw(row.data);\n      // console.log('详情', this.currentRow);\n    },\n    onCloseDetail(){\n      this.showDetail = false;\n    },\n    onAdd(){\n      this.showAdd = true;\n      console.log('点击新增后--->',this.showAdd);\n      console.log('新增表单实例', this.$refs['form_7xo2']);\n    },\n    onCloseAdd(){\n      this.showAdd = false;\n    },\n    onRemove(id){\n     this.delBtnClicked = true;\n     if(!this.selection.length){\n        return;\n     }\n      this.idArr = this.selection.map(item=>item.id);\n      console.log('要删除的id', this.idArr);\n    },\n    onRoleChange(e){\n      this.matchFields.roleName = e.target.value;\n      console.log('角色名称change', e.target.value);\n    },\n    onSearch(){\n      console.log('查询',this.matchFields);\n      this.getRoleList();\n    },\n    onReset(){\n      this.delBtnClicked = false;\n      this.selection={};\n      this.matchFields={};\n      this.page={\n        pageNumber:1,\n        pageSize:10\n      };\n      window.LowcodeMaterialAntVue.message.info({\n        content:'哈哈哈'\n      })\n      console.log('重置', window.LowcodeMaterialAntVue.message);\n    },\n    onConfirm(e){\n      console.log('idArr',this.idArr,'selection',this.selection);\n      if(!this.idArr.length){\n        return;\n      }\n      this.dataSourceMap.deleteRole.load({ id: this.idArr }).then(res=>{\n        console.log('删除res',res);\n        window.LowcodeMaterialAntVue.message.success(\"删除成功\");\n      }).catch(err=>{\n        console.log('删除失败',err);\n        window.LowcodeMaterialAntVue.message.error(\"删除失败\");\n      }).finally(()=>{\n        this.delBtnClicked = false;\n      }) \n    },\n    getRoleList(){\n      this.loading = true;\n      let params={}\n      this.dataSourceMap.list.load({matchFields:toRaw(this.matchFields),page:toRaw(this.page)}).then(res => {\n        this.loading = false;\n        this.list = res.body.list || [];\n        console.log('角色列表数据', this.list);\n\n      }).catch(err => {\n        this.loading = false;\n        console.log('err', err);\n      })\n    },\n    handleDeselect(val){\n      const findIndex=this.selection.findIndex(item=>{\n        return item.id=== val.id\n      })\n      if(~findIndex){\n        this.selection.splice(findIndex,1);\n      }\n    },\n    onSelectAll(checked,val){\n      this.selection = val;\n      this.delDisabled = !this.selection.length;\n      console.log(\"全选\",val,checked);\n    },\n    handleSelectionChange(val,checked){\n      console.log('选中改变',val,checked);\n      if(checked && !this.selection.includes(val)){\n        this.selection.push(val);\n      }\n      if(!checked){\n        this.handleDeselect(val);\n      }\n      this.delDisabled = !this.selection.length;\n      console.log('最后选中',this.selection);\n    },\n    onRoleNameChange(e){\n      const val = e.target.value;\n      this.form.roleName = val;\n      console.log('角色名',val,typeof val);\n    },\n    onRoleTypeChange(val){\n      this.form.roleType = val||'';\n      console.log('角色选择完',val);\n    },\n    onResetForm(e){\n      console.log('重置表单--->',e);\n    },\n    onFinish(val){\n      this.formLoading = true;\n      console.log('onFinish表单校验成功',val);\n      this.dataSourceMap.addRole.load({data:this.form}).then(res=>{\n        console.log('新增角色成功',res);\n        this.formLoading = false;\n        window.LowcodeMaterialAntVue.message.success(\"新增角色成功\");\n      }).catch(err=>{\n        console.log('新增角色失败',err);\n        this.formLoading = false;\n        window.LowcodeMaterialAntVue.message.error(\"新增角色失败\");\n      }).finally(()=>{\n        this.showAdd = false;\n      })\n    },\n    onFinishFailed(val,field){\n      console.log('onFinishFailed表单校验失败',val,field);\n    },\n    onFormValidate(name,status,errorMsg){\n      console.log('任一表单项被校验后触发',name,status,errorMsg);\n    },\n    onSubmit(e){\n      console.log('新增弹窗submit', e.target.value, '表单', this.$refs['form_7xo2']);\n      this.$refs['form_7xo2'].validate((valid)=>{\n        console.log('校验是否通过',valid);\n      })\n    },\n  },\n  mounted() {\n    this.getRoleList();\n  },\n  beforeMount() {\n    console.log('will unmount');\n  },\n})\n"
  },
  "state": {
    "text": "outer",
    "isShowDialog": false,
    "showAdd": false,
    "showDetail": false,
    "matchFields": {},
    "loading": false,
    "roleMap": {
      "1": "运营",
      "2": "运维",
      "3": "运营，运维"
    },
    "page": {
      "pageNumber": 1,
      "pageSize": 10
    },
    "sort": {
      "key": "id",
      "sortType": "ASC"
    },
    "list": [],
    "options": [],
    "selection": [],
    "form": {
      "roleName": "",
      "roleType": ""
    },
    "rules": {
      "roleName": [
        {
          "required": true,
          "message": "",
          "trigger": "onBlur"
        },
        {
          "validator": {
            "type": "JSExpression",
            "value": "onValidateRoleName"
          },
          "trigger": "onBlur"
        }
      ],
      "roleType": [
        {
          "required": true,
          "message": "请选择角色类型",
          "trigger": "onChange"
        }
      ]
    },
    "currentRow": {},
    "delDisabled": true,
    "delBtnClicked": false,
    "idArr": [],
    "formLoading": false
  },
  "methods": {
    "onAddSure": {
      "type": "JSFunction",
      "value": "function (e){\n      console.log('确定新增',e.target.value);\n    }"
    },
    "onAddReset": {
      "type": "JSFunction",
      "value": "function (){\n      this.$refs['form_7xo2'].resetFields();\n    }"
    },
    "onRole": {
      "type": "JSFunction",
      "value": "function (row){\n      console.log('onRow',row);\n      return `row.id`;\n    }"
    },
    "onDetail": {
      "type": "JSFunction",
      "value": "function (e,row){   \n      this.showDetail = true;\n      this.currentRow = toRaw(row.data);\n      // console.log('详情', this.currentRow);\n    }"
    },
    "onCloseDetail": {
      "type": "JSFunction",
      "value": "function (){\n      this.showDetail = false;\n    }"
    },
    "onAdd": {
      "type": "JSFunction",
      "value": "function (){\n      this.showAdd = true;\n      console.log('点击新增后--->',this.showAdd);\n      console.log('新增表单实例', this.$refs['form_7xo2']);\n    }"
    },
    "onCloseAdd": {
      "type": "JSFunction",
      "value": "function (){\n      this.showAdd = false;\n    }"
    },
    "onRemove": {
      "type": "JSFunction",
      "value": "function (id){\n     this.delBtnClicked = true;\n     if(!this.selection.length){\n        return;\n     }\n      this.idArr = this.selection.map(item=>item.id);\n      console.log('要删除的id', this.idArr);\n    }"
    },
    "onRoleChange": {
      "type": "JSFunction",
      "value": "function (e){\n      this.matchFields.roleName = e.target.value;\n      console.log('角色名称change', e.target.value);\n    }"
    },
    "onSearch": {
      "type": "JSFunction",
      "value": "function (){\n      console.log('查询',this.matchFields);\n      this.getRoleList();\n    }"
    },
    "onReset": {
      "type": "JSFunction",
      "value": "function (){\n      this.delBtnClicked = false;\n      this.selection={};\n      this.matchFields={};\n      this.page={\n        pageNumber:1,\n        pageSize:10\n      };\n      window.LowcodeMaterialAntVue.message.info({\n        content:'哈哈哈'\n      })\n      console.log('重置', window.LowcodeMaterialAntVue.message);\n    }"
    },
    "onConfirm": {
      "type": "JSFunction",
      "value": "function (e){\n      console.log('idArr',this.idArr,'selection',this.selection);\n      if(!this.idArr.length){\n        return;\n      }\n      this.dataSourceMap.deleteRole.load({ id: this.idArr }).then(res=>{\n        console.log('删除res',res);\n        window.LowcodeMaterialAntVue.message.success(\"删除成功\");\n      }).catch(err=>{\n        console.log('删除失败',err);\n        window.LowcodeMaterialAntVue.message.error(\"删除失败\");\n      }).finally(()=>{\n        this.delBtnClicked = false;\n      }) \n    }"
    },
    "getRoleList": {
      "type": "JSFunction",
      "value": "function (){\n      this.loading = true;\n      let params={}\n      this.dataSourceMap.list.load({matchFields:toRaw(this.matchFields),page:toRaw(this.page)}).then(res => {\n        this.loading = false;\n        this.list = res.body.list || [];\n        console.log('角色列表数据', this.list);\n\n      }).catch(err => {\n        this.loading = false;\n        console.log('err', err);\n      })\n    }"
    },
    "handleDeselect": {
      "type": "JSFunction",
      "value": "function (val){\n      const findIndex=this.selection.findIndex(item=>{\n        return item.id=== val.id\n      })\n      if(~findIndex){\n        this.selection.splice(findIndex,1);\n      }\n    }"
    },
    "onSelectAll": {
      "type": "JSFunction",
      "value": "function (checked,val){\n      this.selection = val;\n      this.delDisabled = !this.selection.length;\n      console.log(\"全选\",val,checked);\n    }"
    },
    "handleSelectionChange": {
      "type": "JSFunction",
      "value": "function (val,checked){\n      console.log('选中改变',val,checked);\n      if(checked && !this.selection.includes(val)){\n        this.selection.push(val);\n      }\n      if(!checked){\n        this.handleDeselect(val);\n      }\n      this.delDisabled = !this.selection.length;\n      console.log('最后选中',this.selection);\n    }"
    },
    "onRoleNameChange": {
      "type": "JSFunction",
      "value": "function (e){\n      const val = e.target.value;\n      this.form.roleName = val;\n      console.log('角色名',val,typeof val);\n    }"
    },
    "onRoleTypeChange": {
      "type": "JSFunction",
      "value": "function (val){\n      this.form.roleType = val||'';\n      console.log('角色选择完',val);\n    }"
    },
    "onResetForm": {
      "type": "JSFunction",
      "value": "function (e){\n      console.log('重置表单--->',e);\n    }"
    },
    "onFinish": {
      "type": "JSFunction",
      "value": "function (val){\n      this.formLoading = true;\n      console.log('onFinish表单校验成功',val);\n      this.dataSourceMap.addRole.load({data:this.form}).then(res=>{\n        console.log('新增角色成功',res);\n        this.formLoading = false;\n        window.LowcodeMaterialAntVue.message.success(\"新增角色成功\");\n      }).catch(err=>{\n        console.log('新增角色失败',err);\n        this.formLoading = false;\n        window.LowcodeMaterialAntVue.message.error(\"新增角色失败\");\n      }).finally(()=>{\n        this.showAdd = false;\n      })\n    }"
    },
    "onFinishFailed": {
      "type": "JSFunction",
      "value": "function (val,field){\n      console.log('onFinishFailed表单校验失败',val,field);\n    }"
    },
    "onFormValidate": {
      "type": "JSFunction",
      "value": "function (name,status,errorMsg){\n      console.log('任一表单项被校验后触发',name,status,errorMsg);\n    }"
    },
    "onSubmit": {
      "type": "JSFunction",
      "value": "function (e){\n      console.log('新增弹窗submit', e.target.value, '表单', this.$refs['form_7xo2']);\n      this.$refs['form_7xo2'].validate((valid)=>{\n        console.log('校验是否通过',valid);\n      })\n    }"
    }
  }
}
